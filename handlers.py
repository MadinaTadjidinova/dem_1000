import logging
import asyncio
import datetime
from aiogram import Bot, types, Router
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, Message
from aiogram.filters import Command
from config import CHAT_ID, ADMIN_IDS, TOPICS, PAYMENT_REMINDER, sponsor_bot
from google_sheets import sheet

router = Router()  # –ò—Å–ø–æ–ª—å–∑—É–µ–º Router

# ‚úÖ –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO, format="%(asctime)s - %(levelname)s - %(message)s")

# üîπ –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–Ω–æ–ø–æ–∫ "–û –Ω–∞—Å"
def get_about_us_keyboard():
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="üé• –í–∏–¥–µ–æ", callback_data="about_video")],
            [InlineKeyboardButton(text="üñº –§–æ—Ç–æ", callback_data="about_photo")],
            [InlineKeyboardButton(text="üìÇ –ü—Ä–æ–µ–∫—Ç—ã", callback_data="about_projects")],
            [InlineKeyboardButton(text="üìú –ò—Å—Ç–æ—Ä–∏—è", callback_data="about_history")]
        ]
    )

async def send_about_menu(bot: Bot):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –º–µ–Ω—é –≤ —Ç–æ–ø–∏–∫ '–û –Ω–∞—Å' –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ."""
    topic_id = TOPICS["–æ–Ω–∞—Å"]
    await bot.send_message(
        CHAT_ID,
        "üì¢ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ä–∞–∑–¥–µ–ª '–û –Ω–∞—Å'!\n–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π —Ä–∞–∑–¥–µ–ª:",
        reply_markup=get_about_us_keyboard(),
        message_thread_id=topic_id
    )
    logging.info("üìå –ú–µ–Ω—é '–û –Ω–∞—Å' –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.")

@router.message()
async def auto_about_menu(message: Message):
    """–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–µ–Ω—é, –µ—Å–ª–∏ –∫—Ç–æ-—Ç–æ –ø–∏—à–µ—Ç –≤ —Ç–æ–ø–∏–∫ '–û –Ω–∞—Å'."""
    topic_id = TOPICS["–æ–Ω–∞—Å"]
    
    if message.message_thread_id == topic_id:
        logging.info(f"üìå –í —Ç–æ–ø–∏–∫–µ '–û –Ω–∞—Å' –ø–æ—è–≤–∏–ª–æ—Å—å –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {message.from_user.username}. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –º–µ–Ω—é.")
        await message.answer("üì¢ –í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª:", reply_markup=get_about_us_keyboard())

# üîπ –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫ —Å `edit_message_text`
@router.callback_query(lambda c: c.data.startswith("about_"))
async def about_callback_handler(callback: types.CallbackQuery):
    """–†–µ–¥–∞–∫—Ç–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏ —Ç–æ–ª—å–∫–æ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π –Ω–∞–∂–∞–ª"""
    responses = {
        "about_video": "üé• **–í–∏–¥–µ–æ –æ –Ω–∞—à–µ–º –ø—Ä–æ–µ–∫—Ç–µ**\n[–°—Å—ã–ª–∫–∞ –Ω–∞ –≤–∏–¥–µ–æ](https://example.com)",
        "about_photo": "üñº **–§–æ—Ç–æ –æ –Ω–∞—à–µ–º –ø—Ä–æ–µ–∫—Ç–µ**\n[–ì–∞–ª–µ—Ä–µ—è —Ñ–æ—Ç–æ](https://example.com)",
        "about_projects": "üìÇ **–ù–∞—à–∏ –ø—Ä–æ–µ–∫—Ç—ã**:\n1Ô∏è‚É£ –ü—Ä–æ–µ–∫—Ç 1 - –æ–ø–∏—Å–∞–Ω–∏–µ\n2Ô∏è‚É£ –ü—Ä–æ–µ–∫—Ç 2 - –æ–ø–∏—Å–∞–Ω–∏–µ\n3Ô∏è‚É£ –ü—Ä–æ–µ–∫—Ç 3 - –æ–ø–∏—Å–∞–Ω–∏–µ",
        "about_history": "üìú **–ò—Å—Ç–æ—Ä–∏—è –ø—Ä–æ–µ–∫—Ç–∞**:\n–ù–∞—à –ø—Ä–æ–µ–∫—Ç –±—ã–ª —Å–æ–∑–¥–∞–Ω –≤ ... (—Ç—É—Ç –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ)."
    }

    text = responses.get(callback.data, "–û—à–∏–±–∫–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")

    # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await callback.message.edit_text(
        text=text,
        reply_markup=get_about_us_keyboard()  # –û—Å—Ç–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏, —á—Ç–æ–±—ã –º–æ–∂–Ω–æ –±—ã–ª–æ –≤—ã–±—Ä–∞—Ç—å —Å–Ω–æ–≤–∞
    )
    await callback.answer()


# ‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /send
@router.message(Command("send"))
async def send_to_topic(message: types.Message):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º–∏ –≤ —Ç–æ–ø–∏–∫–∏"""
    if message.from_user.id not in ADMIN_IDS:
        await message.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏–π.")
        return

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è: –±–µ—Ä–µ–º caption, –µ—Å–ª–∏ –µ—Å—Ç—å —Ñ–æ—Ç–æ/–≤–∏–¥–µ–æ, –∏–Ω–∞—á–µ –±–µ—Ä–µ–º message.text
    raw_text = message.caption if message.caption else message.text

    if not raw_text:
        await message.answer("‚ùå –£–∫–∞–∂–∏—Ç–µ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã `/send`.")  
        return

    args = raw_text.split(maxsplit=2)

    if len(args) < 3:
        await message.answer("‚ùå –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç: `/send [—Ç–æ–ø–∏–∫] [—Ç–µ–∫—Å—Ç]`")  
        return

    topic_name = args[1].lower()
    text = args[2]

    if topic_name not in TOPICS:
        await message.answer(f"‚ùå –¢–∞–∫–æ–≥–æ —Ç–æ–ø–∏–∫–∞ –Ω–µ—Ç. –î–æ—Å—Ç—É–ø–Ω—ã–µ: {', '.join(TOPICS.keys())}")
        return

    topic_id = TOPICS[topic_name]

    # üñº –§–æ—Ç–æ
    if message.photo:
        photo = message.photo[-1].file_id
        await message.bot.send_photo(CHAT_ID, photo=photo, caption=text, message_thread_id=topic_id)

    # üé• –í–∏–¥–µ–æ
    elif message.video:
        video = message.video.file_id
        await message.bot.send_video(CHAT_ID, video=video, caption=text, message_thread_id=topic_id)

    # üìÅ –î–æ–∫—É–º–µ–Ω—Ç (PDF, —Ñ–∞–π–ª—ã)
    elif message.document:
        document = message.document.file_id
        await message.bot.send_document(CHAT_ID, document=document, caption=text, message_thread_id=topic_id)

    # üéô –ì–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    elif message.voice:
        voice = message.voice.file_id
        await message.bot.send_voice(CHAT_ID, voice=voice, caption=text, message_thread_id=topic_id)

    # üìù –û–±—ã—á–Ω–æ–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    else:
        await message.bot.send_message(CHAT_ID, text, message_thread_id=topic_id)

    await message.answer(f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ —Ç–æ–ø–∏–∫ **{topic_name}**!")


async def auto_send_payment_reminder(bot: Bot):
    """–ê–≤—Ç–æ-–Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ –ø–ª–∞—Ç–µ–∂–µ"""
    topic_id = TOPICS["–æ–±—â–∏–π"]
    while True:
        now = datetime.datetime.now()
        await bot.send_message(CHAT_ID, PAYMENT_REMINDER, message_thread_id=topic_id)
        logging.info(f"üì® –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ –ø–ª–∞—Ç–µ–∂–µ –≤ –æ–±—â–∏–π —á–∞—Ç.")
        await asyncio.sleep(86400)  # –ñ–¥—ë–º 1 –¥–µ–Ω—å (86400 —Å–µ–∫—É–Ω–¥)


# üÜï –ù–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–æ–∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è/–æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –ø–ª–∞—Ç–µ–∂–µ–π
@router.callback_query()
async def process_payment_action(callback: types.CallbackQuery):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–Ω–æ–ø–∫–∏ '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å' –∏ '–û—Ç–∫–ª–æ–Ω–∏—Ç—å'"""
    data = callback.data.split("|")

    if len(data) < 3:
        await callback.answer("‚ùå –û—à–∏–±–∫–∞ –¥–∞–Ω–Ω—ã—Ö!", show_alert=True)
        return

    action, user_id, amount = data[0], data[1], data[2]
    logging.info(f"üü¢ –ü–æ–ª—É—á–µ–Ω callback: {action}, user_id={user_id}, amount={amount}")

    # üîπ –ò—â–µ–º –ø–ª–∞—Ç–µ–∂ –≤ Google Sheets
    records = [{k.strip(): v for k, v in row.items()} for row in sheet.get_all_records()]  # –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã
    row_number = None

    for i, row in enumerate(records, start=2):  # –ü–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞ ‚Äî –∑–∞–≥–æ–ª–æ–≤–∫–∏
        logging.info(f"üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä–æ–∫—É {i}: {row}")
        if str(row["Telegram ID"]) == str(user_id) and str(row["–°—É–º–º–∞"]) == str(amount):
            row_number = i
            break

    if row_number is None:
        logging.warning(f"‚ùå –ü–ª–∞—Ç–µ–∂ –Ω–µ –Ω–∞–π–¥–µ–Ω! user_id={user_id}, amount={amount}")
        await callback.answer("‚ùå –ü–ª–∞—Ç–µ–∂ –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ Google Sheets!", show_alert=True)
        return

    if action == "confirm":
        sheet.update_cell(row_number, 6, "‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω")
        await callback.message.edit_caption(
            f"‚úÖ –ß–µ–∫ –æ—Ç @{callback.from_user.username} –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω!",
            reply_markup=None
        )
        await sponsor_bot.send_message(user_id, "‚úÖ –í–∞—à –ø–ª–∞—Ç–µ–∂ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω!")
        logging.info(f"‚úÖ –ß–µ–∫ –æ—Ç user_id={user_id} –Ω–∞ —Å—É–º–º—É {amount} —Å–æ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω!")

    elif action == "reject":
        sheet.update_cell(row_number, 6, "‚ùå –û—Ç–∫–ª–æ–Ω–µ–Ω")
        await callback.message.edit_caption(
            f"‚ùå –ß–µ–∫ –æ—Ç @{callback.from_user.username} –æ—Ç–∫–ª–æ–Ω–µ–Ω!",
            reply_markup=None
        )
        await sponsor_bot.send_message(user_id, "‚ùå –í–∞—à –ø–ª–∞—Ç–µ–∂ –æ—Ç–∫–ª–æ–Ω–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –¥—Ä—É–≥–æ–π —á–µ–∫.")
        logging.info(f"‚ùå –ß–µ–∫ –æ—Ç user_id={user_id} –Ω–∞ —Å—É–º–º—É {amount} —Å–æ–º –æ—Ç–∫–ª–æ–Ω–µ–Ω!")

    await callback.answer()
