import os
import pytesseract
from PIL import Image
from aiogram import types, Router
from aiogram.types import FSInputFile, InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery
from config import admin_bot, ADMIN_CHAT_ID, TOPICS
from google_sheets import add_payment, update_payment_status

pay_router = Router()  # ‚úÖ –°–æ–∑–¥–∞—ë–º Router

# ‚úÖ –°–æ–∑–¥–∞—ë–º –ø–∞–ø–∫—É "receipts", –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
RECEIPTS_FOLDER = "receipts"
if not os.path.exists(RECEIPTS_FOLDER):
    os.makedirs(RECEIPTS_FOLDER)

def extract_text_from_image(image_path):
    """–°—á–∏—Ç—ã–≤–∞–µ–º —Ç–µ–∫—Å—Ç –∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å —á–µ–∫–∞."""
    img = Image.open(image_path)
    text = pytesseract.image_to_string(img, lang="eng+rus")
    return text

def validate_receipt(image_path, expected_amount):
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å—É–º–º–∞ –Ω–∞ —á–µ–∫–µ."""
    text = extract_text_from_image(image_path)
    return str(expected_amount) in text, "–°—É–º–º–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ —á–µ–∫–µ."

def get_admin_buttons(user_id, amount):
    """–°–æ–∑–¥–∞—ë—Ç inline-–∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è/–æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è —á–µ–∫–∞"""
    buttons = [
        [InlineKeyboardButton(text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data=f"confirm|{user_id}|{amount}")],
        [InlineKeyboardButton(text="‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data=f"reject|{user_id}|{amount}")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=buttons)

@pay_router.message()
async def pay_handler(message: types.Message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ñ–æ—Ç–æ —á–µ–∫–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    
    if not message.photo:
        await message.answer("‚ùå –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ —á–µ–∫–∞ –∏ —É–∫–∞–∂–∏—Ç–µ —Å—É–º–º—É –≤ –æ–ø–∏—Å–∞–Ω–∏–∏.")
        return

    if not message.caption:
        await message.answer("‚ùå –£–∫–∞–∂–∏—Ç–µ —Å—É–º–º—É –≤ –æ–ø–∏—Å–∞–Ω–∏–∏ –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é.")
        return
    
    args = message.caption.split()
    if len(args) < 1:
        await message.answer("‚ùå –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç: `1000` (—Ç–æ–ª—å–∫–æ —Å—É–º–º–∞)")
        return

    amount = args[0]
    user_id = message.from_user.id
    username = message.from_user.username or f"user_{user_id}"

    # üì∏ –ü–æ–ª—É—á–∞–µ–º —Ñ–∞–π–ª —á–µ–∫–∞
    file_id = message.photo[-1].file_id
    file_info = await message.bot.get_file(file_id)
    file_path = file_info.file_path
    local_path = os.path.join(RECEIPTS_FOLDER, f"{file_id}.jpg")

    try:
        await message.bot.download_file(file_path, local_path)
        is_valid, validation_message = validate_receipt(local_path, amount)

        if is_valid:
            add_payment(user_id, username, amount, "–ß–µ–∫", "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ")
            await message.answer(f"‚úÖ –ß–µ–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω! –°—É–º–º–∞: {amount} —Å–æ–º.")
        else:
            add_payment(user_id, username, amount, "–ß–µ–∫ (–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–µ)", "–û–∂–∏–¥–∞–Ω–∏–µ")
            markup = get_admin_buttons(user_id, amount)

            await admin_bot.send_photo(
                chat_id=ADMIN_CHAT_ID,  # ‚úÖ –û—Å—Ç–∞–ª–æ—Å—å –∫–∞–∫ –µ—Å—Ç—å
                message_thread_id=TOPICS["–ø—Ä–æ–≤–µ—Ä–∫–∞"],
                photo=FSInputFile(local_path),
                caption=f"‚ùó –ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–π —á–µ–∫ –æ—Ç @{username}.\n–ü—Ä–∏—á–∏–Ω–∞: {validation_message}",
                reply_markup=markup
            )

            await message.answer("üîç –í–∞—à —á–µ–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É –∞–¥–º–∏–Ω–∞–º. –û–∂–∏–¥–∞–π—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.")

    except Exception as e:
        await message.answer(f"‚ö† –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —á–µ–∫–∞: {str(e)}")